/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package onlineshop;

/**
 *
 * @author dnyyy
 */
public final class Product extends javax.swing.JPanel {

    // variables:
    private int id;
    private String name;
    private int price;
    private String category;
    private int available;
    
    /**
     * Creates new form TestPanel
     */
    // constructors:
    public Product() {
        initComponents();
    }
    public Product(int id, String name, int price, String category, int available) {
        initComponents();
        setLabelsByParameters(id, name, price, category, available);
    }
    public Product(String product[]) {
        initComponents();
        setLabelsByArray(product);
    }
    
    // getter functions:
    public int getId() {
        return id;
    }
    @Override
    public String getName() {
        return name;
    }
    public int getPrice() {
        return price;
    }
    public String getCategory() {
        return category;
    }
    public int getAvailable() {
        return available;
    }
            
    // return this Product if the given id equals
    public Product find(int index) {
        return index == id ? this : null;
    }
    
    // setter funciton for variable and label
    public void setAvailable(int available) {
        this.available = available;
        labelAvailable.setText(String.valueOf(available) + "db");
    }

    // set the Product's labels by a string array
    public void setLabelsByArray(String product[]) {
        setLabelTexts(product[0], product[1], product[2], product[3], product[4]);
        setVariables(Integer.parseInt(product[0]), product[1], Integer.parseInt(product[2]), product[3], Integer.parseInt(product[4]));
        setToolTipTexts();
    }
    
    // set the Product's labels by parameters (id, name, price, ... )
    public void setLabelsByParameters(int id, String name, int price, String category, int available) {
        setLabelTexts(String.valueOf(id), name, String.valueOf(price), category, String.valueOf(available));
        setVariables(id, name, price, category, available);
        setToolTipTexts();
    }
    
    // set all given parameters to global variables
    private void setVariables(int id, String name, int price, String category, int available) {
        this.id = id;
        this.name = name;
        this.price = price;
        this.category = category;
        this.available = available;
    }
    
    // set given parameters to the appropiate label
    private void setLabelTexts(String id, String name, String price, String category, String available) {
        labelId.setText(id + ".");
        labelName.setText(name);
        labelPrice.setText(price + "Ft");
        labelCategory.setText("#" + category);
        labelAvailable.setText(available + "db");
    }
    
    // set label's tool text tip to get informations about Product (e.g. too long Product name)
    private void setToolTipTexts() {
        labelId.setToolTipText("Azonosító: " + labelId.getText());
        labelName.setToolTipText("Név: " + labelName.getText());
        labelPrice.setToolTipText("Ár: " + labelPrice.getText());
        labelCategory.setToolTipText("Kategória: " + labelCategory.getText());
        labelAvailable.setToolTipText("Raktáron: " + labelAvailable.getText());
    }
    
    // return true a Product's name contains the given text
    public boolean searchByName(String search) {
        return name.toLowerCase().contains(search.trim().toLowerCase());
    }
    
    // return true a Product's category contains the given text
    public boolean searchByCategory(String search) {
        return category.toLowerCase().contains(search.trim().toLowerCase());
    }

        
    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        labelId = new javax.swing.JLabel();
        labelName = new javax.swing.JLabel();
        labelPrice = new javax.swing.JLabel();
        labelCategory = new javax.swing.JLabel();
        labelAvailable = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(400, 28));
        setMinimumSize(new java.awt.Dimension(400, 28));
        setPreferredSize(new java.awt.Dimension(400, 28));
        setSize(new java.awt.Dimension(400, 28));

        labelId.setText("jLabel2");
        labelId.setMaximumSize(new java.awt.Dimension(80, 16));
        labelId.setMinimumSize(new java.awt.Dimension(80, 16));
        labelId.setPreferredSize(new java.awt.Dimension(80, 16));
        labelId.setSize(new java.awt.Dimension(80, 16));
        labelId.setToolTipText(labelId.getText());

        labelName.setText("jLabel3");

        labelPrice.setText("jLabel4");

        labelCategory.setText("jLabel5");

        labelAvailable.setText("jLabel6");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelId, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelName, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelName)
                        .addComponent(labelPrice)
                        .addComponent(labelCategory)
                        .addComponent(labelAvailable)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel labelAvailable;
    private javax.swing.JLabel labelCategory;
    private javax.swing.JLabel labelId;
    private javax.swing.JLabel labelName;
    private javax.swing.JLabel labelPrice;
    // End of variables declaration//GEN-END:variables
}
